/** *
 * 러스트는 우리가 대처할 수 없는 에러(복구 불가능한 에러)에 대해 panic!이라는 메소드를 가지고 있다.
 * 이 매크로가 실행되면 실패 메세지를 출력하면서, 스택을 되감으며 청소하고 종료한다. 
 * 기본적으로 되감기를 시작하면 스택을 거꾸로 훑어가면서 데이터를 제거하는데, 이것은 일이 많아진다.
 * 다른 대안으로는 abort, 즉시 그만두는 것이 있는데, 데이터 제거 없이 프로그램을 종료하므로,
 * 청소하는 역할은 OS에 넘긴다. 만약 되감기 대신 abort를 사용한다면 결과 바이너리가 작아질 것이다.
 * [profile.release]
 * panic = abort
 * 를 추가함으로써 패닉상에서 abort를 사용 가능하다.
 * 
 * 
 * 
 * Backtrace...
 * 
 * RUST_BACKTRACE=1 을 환경변수로 넣으며 컴파일하면 백트레이스 사용이 가능하다.
 * 
 */

fn main() {
    // panic!("Crash and burn");

    let v = vec![1, 2, 3];

    println!("{}", v[99]);
}
